spring.config.import=application_prod.properties,application_uat.properties

#Profiles below, only use in internal environment.  Not really for production.
#In production, use exported environment variables to set a profile or set in a Java system property.
#See Course notes for more info.
#spring.profiles.active=dev
spring.profiles.active=uat
#spring.profiles.active=prod

spring.datasource.url=jdbc:mysql://spring.czfm3dfqtyzb.us-west-2.rds.amazonaws.com/eazyschool
spring.datasource.username=admin
spring.datasource.password=mysqlspring
## shows sql statements in console at runtime
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.javax.persistence.validation.mode=none

spring.data.rest.base-path=/data-api

# debug=true
#debug=trace #Very chatty and resource dependent.  Don't use unless you absolutely need to.

logging.level.root=INFO
#logging.level.com.easybytes.easyschool.aspects = ERROR
#logging.level.com.easybytes.easyschool.controllers = TRACE

# Initialize log group eazyschool_error
logging.group.eazyschool_error=com.easybytes.easyschool.aspects, com.easybytes.easyschool.controllers
#Set log level to log group eazyschool_error
logging.level.eazyschool_error=ERROR

#Prints logs statements in color coded form.
#spring.output.ansi.enabled=always

easyschool.pageSize=10

#Note:  These are in key/value pairs so you will need to access them using a Map.
easyschool.contact.pageSize=5
easyschool.contact.successMsg=Your message is submitted successfully.

easyschool.branches[0]=New York
easyschool.branches[1]=Delhi
easyschool.branches[2]=Paris
easyschool.branches[3]=Singapore